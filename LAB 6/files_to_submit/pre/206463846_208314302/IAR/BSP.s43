#include  "BSP.h"

            MODULE BSP
            PUBLIC GPIOconfig,ST1_ADC_Conf, ST2_TAConf, ST2_ADC_Conf
            PUBLIC StopSamplesST1,StartSamplesST1
            EXTERN Main,PBs_handler,ADC_ISR, TA1_handler
            
            PUBLIC StopAllTimer, ST2_TAConf 
            EXTERN TA0_ISR, lcd_init, lcd_clr
             
            RSEG   CODE                    
;-----------------------------------------------------------------------------  
;           GPIO congiguration
;-----------------------------------------------------------------------------
GPIOconfig 
             mov.w   #WDTPW+WDTHOLD,&WDTCTL   ; hold watchdog timer

	      call   #Cfg_LCD_Timer
               mov.b     #0x00, &P2SEL                              ; P2 GPIO   
               bis.b     #0xFF, &P2DIR                              ; P2 output  - LCD Data  
               mov.b     #0x00, &P1SEL                              ; P1 GPIO   
               bis.b     #0xE0, &P1DIR                              ; P1.7-P1.5 output - LCD bits Conrol 
               bic.b     #0x07, &P1DIR ;;;                          ; P1.1-P1.0 input   
               bis.b     #0x03, &P1IES                             ; pull up 
               call      #lcd_init 
               call      #lcd_clr
               bis.b     #0x07, &P1IE   ;;;;                            ; P1.1-P1.0 interup enable 
               bic.b     #0x07, &P1IFG  ;;;                             ; reset of interrupt flag  
               
             
             ret




;-----------------------------------------------------------------------------  
;           ADC congiguration
;-----------------------------------------------------------------------------

ST1_ADC_Conf ; regular voltage reference, 4 cycles for each sample, allow muliple samples, turn on ADC10, enable intterupt
             mov      #SREF_0 + ADC10SHT_0 + ADC10ON + ADC10IE , &ADC10CTL0

             ; INCH - A3, trriger - ADC10SC, SMCLK, repeat single channel
             mov      #INCH_3 + SHS_0 + ADC10SSEL_3 + CONSEQ_0  ,&ADC10CTL1
             
             ; Enable A3 (P1.3) to Analog input for the ADC
             BIS.B    #0x08, &ADC10AE0

             ret
             
StartSamplesST1 ; start samplings
                 BIS      #ENC + ADC10SC,&ADC10CTL0
                 ret
                 
StopSamplesST1
                 
               BIC #ENC,&ADC10CTL0  ; disable conversions                        
               RET
               
; State 2 -----------------------------------------------------------------------------

ST2_ADC_Conf  ;               Configuration ADC10CTL0
                MOV #ADC10SHT_3 + ADC10ON + ADC10IE,&ADC10CTL0 ; its NOT ADC10SHT_3 and no MSC
;               Configuration ADC10CTL1
                MOV #INCH_3+ ADC10SSEL_3 , &ADC10CTL1
;               Configuration P1.3 as Analog Input
                BIS.B #0x08,&ADC10AE0       
ret



  
;-----------------------------------------------------------------------------  
;           LCD timer congiguration
;-----------------------------------------------------------------------------
Cfg_LCD_Timer
             mov.w     #TASSEL_2 + MC_0 + TACLR, &TA0CTL         
             ret

;-----------------------------------------------------------------------------  
;           A1 timer functions
;-----------------------------------------------------------------------------

ST2_TAConf  ;  up\down mode, enable interrupt from timer core
            MOV     #TASSEL_2 + ID_3 + MC_3 + TACLR + TAIE, &TA1CTL
            MOV     #0x3FF,&TA1CCR0   ; put the max value --> will allow us an interrupt every 1 second
            
            RET

StopAllTimer  CLR &TA1CTL
              CLR &TA1CCTL1
              CLR &TA1CCTL2
              RET

;---------------------------------------------------------------------------------------                  
             COMMON  INTVEC   ; Interrupt Vectors-Begins a common segment name of INTVEC 
;--------------------------------------------------------------------------------------
             
             ORG     RESET_VECTOR       ; MSP430 RESET Vector
             DW      Main  
             ORG     PORT1_VECTOR       ;PORT1 Interrupt Vector
             DW      PBs_handler        ; interrupt handler = ISR
             ORG     ADC10_VECTOR       ; ADC ISR
             DW      ADC_ISR
             ORG     TIMER0_A1_VECTOR    ;A0 LCD Timer Vector
             DW      TA0_ISR
             ORG     TIMER1_A1_VECTOR   ; Timer A1
             DW      TA1_handler


            
             ENDMOD
             END
             
             
             
    