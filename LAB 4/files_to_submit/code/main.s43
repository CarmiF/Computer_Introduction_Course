#include  "bsp.h"
#include "msp430g2553.h"

             NAME   MAIN
             PUBLIC state,main, clickCounter
             EXTERN SysConfig,ClrLEDs,IncLED,DecLED,delay, delay0_5sec, RlaLED
             EXTERN PrintLEDs,ReadSWs,PrintSWs2LEDs
             
;----------------------------------------------------------------------------------
             ORG      DataSegStart         ; Begins a DATA segment
             
state        DW   0                        ; state variable
ledState1    DB   0
ledState2    DB   0x01
clickCounter DB   0



;-------------------------------------------------------------------------------------          
             ;RSEG    CSTACK    ; shows to compiler where is the RAM populating limit
                                ; can be ignored
;-------------------------------------------------------------------------------------
             ORG     CodeSegStart       ; Program Reset = Begins a CODE segment
             
main         mov.w   #StackTosStart,SP  ; Initialize stack pointer to the RAM end 
             call    #SysConfig
             clr     state              ; set to idle state at the beginning
             bis.w   #CPUOFF+GIE,SR

;---------------------- FSM_loop -------------------------------------
state0       cmp     #0x00,state         ;check if state0           
             jnz     state1
             clr.b    LEDsArrPort
             ;call    #PrintSWs2LEDs
             bis.w   #CPUOFF+GIE,SR 

state1       cmp     #0x01,state         ;check if state1
             jnz     state2
             mov.b   ledState1,LEDsArrPort
             mov.b   #20, R10
             DINT
             
             
L1           call    #IncLED           ;infinite function 
             mov.b    LEDsArrPort,ledState1
             push    #0XB83E
             call    #delay0_5sec
             dec     R10
             jz      GoToSleep     
             
             JMP     L1
             EINT
             
            
state2       cmp     #0x02,state         ;check if state2
             jnz     state3  
             DINT
             mov.b   ledState2,LEDsArrPort
             mov.b   #20, R10
L2           
             push    #0XB83E
             call    #delay0_5sec
                         
             call    #RlaLED           ;infinite function 
             mov.b    LEDsArrPort,ledState2
             
             dec     R10
             jz      GoToSleep     
             
             JMP     L2
             EINT
             
state3        cmp     #0x03,state         ;check if state2
              jnz     state0  
              inc.b   LEDsArrPort
            

Val8Op        MOV #4000,R11                  ; 5 sec iteration counter (for T=1.25ms) -> 5000ms/1.25ms = 4000 iterations
              
DoAgain       XOR.B #0x80,&P2OUT             ; change the wave value
              ; Delay : 1134 cycles in T=1ms -> for T=1.25ms we need: 1134*1.25~1417 cycles
              ;----------------------------------------------------------------------------
              ; 1 Logi
              ; for DC=25%: 
              ; we need : 1417/4~354 cycles
              ; delay = ax+b
              MOV #115,R7                    ;  2 cycles = b1                               
LWait81       DEC R7                         ; iter delay : 'DEC' + 'JNZ' = 3 cycles -> 115*3=345
              JNZ LWait81
              
              XOR.B #0x80,&P2OUT              ;  5 cycles = b2
              ;delay = 3*115+7=352
              ;----------------------------------------------------------------------------
              ; 0 Logi
              ; we need : (1417/4)*3 =1062.75 cycles
              ; delay = ax+b
              
              MOV #348,R7                    ;  2 cycles = b1
LWait82       DEC R7                         ; iter delay : 'DEC' + 'JNZ' = 3 cycles -> 348*3=1044
              JNZ LWait82 
              
              DEC R11                        ;  1 cycles = b1
              JZ NextKind                    ;  2 cycles = b2 **********calculation for comments stoped here in Roee's order 
             
                               ; Return to switch check


NextKind      MOV #8000,R11                  ; 5 sec iteration counter (for T=0.625ms) -> 5000ms/0.625ms = 8000 iterations
              
NextKindLp    XOR.B #0x80,&P2OUT              
              MOV #176,R7                    
LWait811      DEC R7                         
              JNZ LWait811
              
            
              
              XOR.B #0x80,&P1OUT              
              
              MOV #52,R7 
LWait822      DEC R7                         
              JNZ LWait822 
              
              DEC R11
              JZ Val8Op
             
                               
              JMP Val8Op                      ; Return to switch check
         ; Restart the sequence

             
               


GoToSleep    ;dec      clickCounter
            ; cmp.b    #0x00, clickCounter                  
             ;jz       goTostate0
             ;jmp state0
 
goTostate0   mov      #0x00, state         
             jmp     state0       
                 
             END
